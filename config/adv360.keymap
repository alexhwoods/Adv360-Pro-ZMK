
/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */


/* THIS FILE WAS GENERATED!
 *
 * This file was generated automatically. You may or may not want to
 * edit it directly.
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/rgb.h>
#include <dt-bindings/zmk/backlight.h>

#define KEYS_LEFT 0 1 2 3 4 5 6 \
                  14 15 16 17 18 19 20 \
                  28 29 30 31 32 33 34 \
                  46 47 48 49 50 51 \
                  66 67 68 69 70

#define KEYS_RIGHT 7 8 9 10 11 12 13 \
                   21 22 23 24 25 26 27 \
                   39 40 41 42 43 44 45 \
                   60 61 62 63 64 65 \
                   77 78 79 80 81

#define UNIVERSAL  14 67


#define THUMBS_LEFT 35 36 54 71 72 73

#define THUMBS_RIGHT 37 38 57 74 75 76

#define THUMBS THUMBS_LEFT THUMBS_RIGHT


&lt {
    quick-tap-ms = <300>;
    global-quick-tap;
};

/ {
  behaviors {
    #include "macros.dtsi"


    hm: homerow_mods {
        compatible = "zmk,behavior-hold-tap";
        label = "HOMEROW_MODS";
        #binding-cells = <2>;
        tapping-term-ms = <200>;
        quick_tap_ms = <175>;
        #flavor = "tap-preferred";
        flavor = "balanced";
        bindings = <&kp>, <&kp>;
    };

    hm_l: homerow_mods_left {
        compatible = "zmk,behavior-hold-tap";
        label = "HOMEROW_MODS_LEFT";
        #binding-cells = <2>;
        tapping-term-ms = <200>;
        quick_tap_ms = <175>;
        flavor = "balanced";
        bindings = <&kp>, <&kp>;
        hold-trigger-key-positions = <KEYS_RIGHT THUMBS UNIVERSAL>;
    };

    hm_r: homerow_mods_right {
        compatible = "zmk,behavior-hold-tap";
        label = "HOMEROW_MODS_RIGHT";
        #binding-cells = <2>;
        tapping-term-ms = <200>;
        quick_tap_ms = <175>;
        flavor = "balanced";
        bindings = <&kp>, <&kp>;
        hold-trigger-key-positions = <KEYS_LEFT THUMBS>;
    };
  };

    // Home row mods QWERTY
    #define _F_SFT &hm_l LSHFT F  // Shift on index fingers
    #define _J_SFT &hm_r RSHFT J
    #define _D_CMD &hm_l LGUI D   // Command on middle fingers
    #define _K_CMD &hm_r RGUI K
    #define _S_CTL &hm_l LCTRL S  // Control on ring down
    #define _L_CTL &hm_r RCTRL L
    #define _A_OPT &hm_l LALT A   // Option on pinky finger
    #define _SEMICOLON_OPT &hm_r RALT SEMICOLON

    // Home row mods Colemak-DH
    #define CM_T_SFT &hm_l LSHFT T  // Shift on index fingers
    #define CM_N_SFT &hm_r RSHFT N
    #define CM_S_CMD &hm_l LGUI S   // Command on middle fingers
    #define CM_E_CMD &hm_r RGUI E
    #define CM_R_CTL &hm_l LCTRL R  // Control on ring down
    #define CM_I_CTL &hm_r RCTRL I
    #define CM_A_OPT &hm_l LALT A   // Option on pinky finger
    #define CM_O_OPT &hm_r RALT O


    keymap {
        compatible = "zmk,keymap";


        default_layer {
            bindings = <
 &kp EQUAL          &kp N1          &kp N2            &kp N3     &kp N4    &kp N5     &tog 4                                                                         &mo 3      &kp N6    &kp N7   &kp N8     &kp N9     &kp N0          &kp MINUS
 &kp TAB            &kp Q           &kp W             &kp E      &kp R     &kp T      &kp LG(LS(V))                                                                  &none      &kp Y     &kp U    &kp I      &kp O      &kp P           &kp BSLH
 &mt LCTRL ESC      _A_OPT          _S_CTL            _D_CMD     _F_SFT    &kp G      &kp LG(LS(N4))  &kp F3       &kp F4                  &kp LGUI    &kp RCTRL   &kp LALT   &kp H     _J_SFT   _K_CMD     _L_CTL     _SEMICOLON_OPT  &kp SQT
 &kp LSHFT          &kp Z           &kp X             &kp C      &kp V     &kp B                                   &kp F2                  &kp PG_UP                          &kp N     &kp M    &kp COMMA  &kp DOT    &kp FSLH        &kp RSHFT
 &mo 2              &kp GRAVE       &kp UNDERSCORE    &kp UP     &kp RIGHT            &lt 1 SPACE     &kp ENTER        &kp F1                  &kp PG_DN   &kp LGUI    &kp BSPC             &kp UP   &kp DOWN   &kp LBKT   &kp RBKT        &mo 2
            >;
        };

        layer_keypad {
            bindings = <
 &kp EQUAL    &kp N1     &kp N2        &kp N3     &kp N4      &kp N5   &trans                                                                &mo 3     &kp N6     &kp KP_NUM    &kp KP_EQUAL   &kp KP_DIVIDE  &kp KP_MULTIPLY  &kp MINUS
 &kp LG(TAB)      &kp Q      &kp LG(W)     &kp E      &kp R       &kp T    &none                                                                 &none     &kp Y      &kp KP_N7     &kp KP_N8      &kp KP_N9      &kp KP_MINUS     &kp BSLH
 &kp ESC      &kp LALT   &kp LC(S)     &kp LGUI   &kp F       &kp G    &none     &kp LCTRL  &kp LALT                   &kp LGUI  &kp RCTRL   &none     &kp LEFT   &kp DOWN      &kp UP         &kp RIGHT      &kp KP_PLUS      &kp SQT
 &kp LSHFT    &kp LG(Z)  &kp X         &kp LG(C)  &kp LG(V)   &kp B                         &kp HOME                   &kp PG_UP                       &kp N      &kp KP_N1     &kp KP_N2      &kp KP_N3      &kp KP_ENTER     &kp RSHFT
 &mo 2        &kp LG(GRAVE)  &kp CAPS      &kp UP     &kp RIGHT            &kp BSPC  &kp DEL    &kp END                    &kp PG_DN  &kp ENTER  &kp BSPC             &kp UP        &kp DOWN       &kp KP_DOT     &kp RBKT         &mo 2
            >;
        };

        layer_fn {
            bindings = <
 &kp F1  &kp F2  &kp F3  &kp F4  &kp F5  &kp F6            &tog 1                                                   &mo 3  &kp F7  &kp F8  &kp F9  &kp F10  &kp F11  &kp F12
 &trans  &trans  &trans  &trans  &trans  &trans             &none                                                   &none  &trans  &trans  &trans   &trans   &trans   &trans
 &trans  &macro_horo_focus  &trans  &trans  &trans  &trans             &none  &trans  &trans                  &trans  &trans   &none  &trans  &trans  &trans   &trans   &trans   &trans
 &trans  &trans  &trans  &trans  &trans  &trans                            &trans                  &trans                  &trans  &trans  &trans   &trans   &trans   &trans
 &trans  &trans  &trans  &trans  &trans                    &trans  &trans  &trans                  &trans  &trans  &trans          &trans  &trans   &trans   &trans   &trans
            >;
        };

        layer_mod {
            bindings = <
  &none  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4                  &none                                                                          &trans   &none       &none       &none   &none   &none   &none
  &none         &none         &none         &none         &none         &none            &bootloader                                                                     &bootloader   &none       &none       &none   &none   &none   &none
  &none         &none         &none         &none         &none         &none                  &none   &none   &none                  &bt BT_CLR       &none  &rgb_ug RGB_MEFS_CMD 5   &none       &none       &none   &none   &none   &none
  &none         &none         &none         &none         &none         &none                                  &none                       &none                                       &none       &none       &none   &none   &none   &none
  &none         &none         &none         &none         &none                                &none   &none   &none                       &none  &bl BL_TOG         &rgb_ug RGB_TOG          &bl BL_INC  &bl BL_DEC   &none   &none   &none
            >;
        };

        /** https://colemakmods.github.io/mod-dh/ */
        colemak_dh {
            bindings = <
 &kp EQUAL       &kp N1          &kp N2            &kp N3     &kp N4    &kp N5     &trans                                                                       &mo 3      &kp N6    &kp N7   &kp N8     &kp N9    &kp N0          &kp MINUS
 &kp TAB         &kp Q           &kp W             &kp F      &kp P     &kp B      &kp LG(LS(V))                                                                &none      &kp J     &kp L    &kp U      &kp Y     &kp SEMICOLON   &kp BSLH
 &mt LCTRL ESC   CM_A_OPT        CM_R_CTL          CM_S_CMD   CM_T_SFT  &kp G      &kp LG(LS(N4))  &kp F3       &kp F4                  &kp LGUI    &kp RCTRL   &kp LALT   &kp M     CM_N_SFT CM_E_CMD   CM_I_CTL  CM_O_OPT        &kp SQT
 &kp LSHFT       &kp Z           &kp X             &kp C      &kp D     &kp V                                   &kp F2                  &kp PG_UP                          &kp K     &kp H    &kp COMMA  &kp DOT   &kp FSLH        &kp RSHFT
 &mo 2           &kp GRAVE       &kp UNDERSCORE    &kp UP     &kp RIGHT            &lt 1 SPACE     &kp ENTER        &kp F1              &kp PG_DN   &kp LGUI    &kp BSPC             &kp UP   &kp DOWN   &kp LBKT  &kp RBKT        &mo 2
            >;
        };

    };
};
